@page "/login"
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<div class="container">
    <div class="row d-flex justify-content-center">
        <div class="col-sm-8">
            <EditForm Model="@User" OnValidSubmit="HandleLogin">
                <div class="form-group">
                    <label for="email" class="form-label">Email</label>
                    <InputText type="email" id="email" @bind-Value="User.Email" class="form-control" required />
                </div>
                <div class="form-group">
                    <label for="password" class="form-label">Password</label>
                    <InputText type="password" id="password" @bind-Value="User.Password" class="form-control" required />
                </div>
                <div class="mb-3 mt-3">
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code
{
    private LoginDto User = new LoginDto();
    private string? Message {get; set; }

    async Task HandleLogin()
    {
        var result = await Http.PostAsJsonAsync("/api/authentication/login", User);

        var token = await result.Content.ReadAsStringAsync();

        await LocalStorage.SetItemAsync("token", token);
        await AuthStateProvider.GetAuthenticationStateAsync();

        NavigationManager.NavigateTo("/");
    }

}